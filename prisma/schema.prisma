// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Collection {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  projects Project[]
}

model Finish {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(255)
  projects Project[]
}

model Module {
  id                    Int             @id @default(autoincrement())
  partNumber            String          @unique
  projectsThisBelongsTo ProjectModule[]
}

enum DrawerType {
  shallow
  deep
}

enum MeasureSystem {
  metric
  imperial
}

model Project {
  id                Int             @id @default(autoincrement())
  title             String          @db.VarChar(255)
  type              DrawerType
  mainMeasureSystem MeasureSystem
  widthInCM         Float
  gableInCM         Float
  widthInIN         String          @db.VarChar(255)
  gableInIN         String          @db.VarChar(255)
  collectionId      Int
  collection        Collection      @relation(fields: [collectionId], references: [id])
  finishId          Int
  finish            Finish          @relation(fields: [finishId], references: [id])
  groupId           Int
  group             ProjectGroup    @relation(fields: [groupId], references: [id])
  slideId           Int
  slide             Slide           @relation(fields: [slideId], references: [id])
  modules           ProjectModule[]
}

model ProjectGroup {
  id       Int                @id @default(autoincrement())
  name     String             @db.VarChar(255)
  projects Project[]
  users    UserProjectGroup[]
}

model ProjectModule {
  id        Int             @id @default(autoincrement())
  posX      Float
  posY      Float
  posZ      Float
  rotX      Float
  rotY      Float
  rotZ      Float
  moduleId  Int
  module    Module          @relation(fields: [moduleId], references: [id])
  parentId  Int?
  parent    ProjectModule?  @relation(fields: [parentId], references: [id])
  children  ProjectModule[] @relation("ProjectModuleToProjectModule")
  Project   Project?        @relation(fields: [projectId], references: [id])
  projectId Int?
}

model Slide {
  id        Int       @id @default(autoincrement())
  brand     String    @db.VarChar(255)
  model     String    @db.VarChar(255)
  depthInCM Float
  depthInIN String    @db.VarChar(255)
  projects  Project[]
}

model User {
  id            Int                @id @default(autoincrement())
  email         String             @unique @db.VarChar(255)
  projectGroups UserProjectGroup[]
}

enum UserProjectGroupRelationshipType {
  owner
  default
}

model UserProjectGroup {
  id               Int                              @id @default(autoincrement())
  groupId          Int
  group            ProjectGroup                     @relation(fields: [groupId], references: [id])
  userId           Int
  user             User                             @relation(fields: [userId], references: [id])
  relationshipType UserProjectGroupRelationshipType
}
